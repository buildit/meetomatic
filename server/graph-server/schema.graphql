type Query {
  getCurrentUser: User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createCard(input: CreateCardInput): Card!
}

type AuthPayload {
  token: String!
  user: User!
}

input CreateCardInput {
  description: String!
  column: String!
}

type User {
  id: ID!
  email: String!
  name: String!
}

type Card {
  id: ID!
  description: String!
  owner: User
  column: String! # Temp field until we get boards and states in
}

type CreateBoard {
  name: String!
  passwords: String
}
